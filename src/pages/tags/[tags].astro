---
import { getCollection } from "astro:content";
import BlogPost from "../../components/BlogPost.astro";
import TagList from "../../components/TagList.astro";
import BlogPostListLayout from "src/layouts/BlogPostListLayout.astro";
import classes from "../../styles/blog.module.scss";

export async function getStaticPaths() {
  const allPosts = await getCollection("blog");

  const uniqueTags: string[] = [
    ...new Set<string>(allPosts.map((post: any) => post.data.tags).flat()),
  ];

  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post: any) =>
      post.data.tags.includes(tag)
    );
    return {
      params: { tags: tag },
      props: { posts: filteredPosts, tags: uniqueTags },
    };
  });
}

const { tags: tag } = Astro.params;
const { posts, tags } = Astro.props;
---

<BlogPostListLayout pageTitle={tag}>
  <div class={`glass ${classes.blogListHeader}`}>
    <h1>{tag}</h1>
    <TagList tags={tags} />
    <p>Posts tagged with {tag}</p>
  </div>
  <div class={`${classes.blogList}`}>
    {
      posts
        .sort((a, b) => {
          return (
            new Date(b.data.pubDate).getTime() -
            new Date(a.data.pubDate).getTime()
          );
        })
        .map((post: { id: any; data: any }) => (
          <BlogPost
            url={`/posts/${post.id}/`}
            title={post.data.title}
            description={post.data.description}
            date={post.data.pubDate}
            image={post.data.image}
          />
        ))
    }
  </div>
</BlogPostListLayout>
